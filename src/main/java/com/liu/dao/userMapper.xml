<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liu.dao.userMapper" >
  <resultMap id="BaseResultMap" type="com.liu.model.User" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="Code" property="code" jdbcType="VARCHAR" />
    <result column="Name" property="name" jdbcType="VARCHAR" />
    <result column="Sex" property="sex" jdbcType="VARCHAR" />
    <result column="Phone" property="phone" jdbcType="VARCHAR" />
    <result column="DepartmentCode" property="departmentcode" jdbcType="VARCHAR" />
    <result column="Password" property="password" jdbcType="VARCHAR" />
    <result column="RoleCode" property="rolecode" jdbcType="VARCHAR" />
    <result column="Remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, Code, Name, Sex, Phone, DepartmentCode, Password, RoleCode, Remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where ID = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="getByName" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from user
    where Name = #{name,jdbcType=VARCHAR} and Password = #{password,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.liu.model.User" >
    insert into user (ID, Code, Name, 
      Sex, Phone, DepartmentCode, 
      Password, RoleCode, Remark
      )
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{departmentcode,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{rolecode,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.liu.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="code != null" >
        Code,
      </if>
      <if test="name != null" >
        Name,
      </if>
      <if test="sex != null" >
        Sex,
      </if>
      <if test="phone != null" >
        Phone,
      </if>
      <if test="departmentcode != null" >
        DepartmentCode,
      </if>
      <if test="password != null" >
        Password,
      </if>
      <if test="rolecode != null" >
        RoleCode,
      </if>
      <if test="remark != null" >
        Remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="departmentcode != null" >
        #{departmentcode,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="rolecode != null" >
        #{rolecode,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.liu.model.User" >
    update user
    <set >
      <if test="code != null" >
        Code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        Sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        Phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="departmentcode != null" >
        DepartmentCode = #{departmentcode,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="rolecode != null" >
        RoleCode = #{rolecode,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        Remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liu.model.User" >
    update user
    set Code = #{code,jdbcType=VARCHAR},
      Name = #{name,jdbcType=VARCHAR},
      Sex = #{sex,jdbcType=VARCHAR},
      Phone = #{phone,jdbcType=VARCHAR},
      DepartmentCode = #{departmentcode,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      RoleCode = #{rolecode,jdbcType=VARCHAR},
      Remark = #{remark,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>